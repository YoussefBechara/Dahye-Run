import pygame
import pygame.freetype 
import time
pygame.init()
screen_width, screen_height = 1200 , 650

screen = pygame.display.set_mode((screen_width, screen_height))

x, y, width, height, vel, jumpvel = 500 , 500 , 30 , 60 , 5, 40
obst_width, obst_height = 80, 90
ox , oy = 800 , 500
run = True
obst_list = [[800, 500, 80, 70], [100, 300, 30, 70]]
#my idea is to make every obstacle coordinates stored in a list then check if this coodinate in list
direction = 0
def check_x_coords(x, list):
    for i in list:
        c = i[0]
        if c-width==x or x ==c+i[2] :
            return False
        return True
def check_y_coords(y, list):
    for i in list:
        c = i[1]
        if  c-height==y or y == c+i[3] :
            return False
        return True
while run:
    pygame.time.delay(10)
    keys = pygame.key.get_pressed()
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            run = False
        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_SPACE: #jumping
                screen.fill((0,0,0))
                for i in range(5):
                        keys = pygame.key.get_pressed()
                        if (keys[pygame.K_d])  and check_x_coords(x+vel, obst_list) is True:
                            x += vel*3
                        if (keys[pygame.K_a])  and check_x_coords(x+vel, obst_list) is True:
                            x -= vel*3
                        y -= jumpvel
                        pygame.draw.rect(screen, (0, 0, 255), (obst_list[0][0], obst_list[0][1],obst_list[0][2],obst_list[0][3]))
                        player1 = pygame.draw.rect(screen, (55, 255, 111), (x, y, width, height))
                        pygame.display.update()
                        screen.fill((0, 0, 0))
                        time.sleep(0.04)
               
                for i in range(5):
                        keys = pygame.key.get_pressed()
                        if (keys[pygame.K_d])  and check_x_coords(x+vel, obst_list) is True:
                            x += vel*3
                        if (keys[pygame.K_a])  and check_x_coords(x+vel, obst_list) is True:
                            x -= vel*3
                        if (y + jumpvel) == oy or (y - jumpvel) == oy:
                            break
                        y+= jumpvel
                        pygame.draw.rect(screen, (0, 0, 255), (ox, oy, obst_width, 70))
                        player1 = pygame.draw.rect(screen, (55, 255, 111), (x, y, width, height))
                        pygame.display.update()
                        screen.fill((0, 0, 0))
                        time.sleep(0.04)
    keys = pygame.key.get_pressed()
    if (keys[pygame.K_d]) and check_x_coords(x+vel, obst_list) is True:
        x += vel
    if (keys[pygame.K_a]) and check_x_coords(x-vel, obst_list) is True:
        x -= vel
    pygame.draw.rect(screen, (0, 0, 255), (ox, oy, obst_width, 70))
    player1 = pygame.draw.rect(screen, (55, 255, 111), (x, y, width, height))
    
    pygame.display.update()
    screen.fill((0, 0, 0))


pygame.quit()
